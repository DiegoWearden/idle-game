-- Leaderboard schema for Drip Drip: Ice Clicker
create table if not exists public.leaderboard (
  id bigint generated by default as identity primary key,
  player_id text not null unique,
  username text not null,
  drops bigint not null default 0,
  updated_at timestamp with time zone not null default now()
);

create index if not exists leaderboard_drops_idx on public.leaderboard (drops desc);

alter table public.leaderboard enable row level security;

-- Public read
drop policy if exists leaderboard_select on public.leaderboard;
create policy leaderboard_select on public.leaderboard
for select to anon using (true);

-- Allow anyone to insert (for demo; tighten with auth in prod)
drop policy if exists leaderboard_insert on public.leaderboard;
create policy leaderboard_insert on public.leaderboard
for insert to anon with check (true);

-- Allow updates (for demo; tighten with auth in prod)
drop policy if exists leaderboard_update on public.leaderboard;
create policy leaderboard_update on public.leaderboard
for update to anon using (true) with check (true);

-- Optional: update timestamp on changes
create or replace function public.set_updated_at()
returns trigger language plpgsql as $$
begin
  new.updated_at = now();
  return new;
end;$$;

drop trigger if exists set_updated_at on public.leaderboard;
create trigger set_updated_at before update on public.leaderboard
for each row execute function public.set_updated_at();
